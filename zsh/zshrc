fpath=(${HOME}/.zsh/funcs /usr/local/share/zsh-completions $fpath)

autoload -U colors; colors
autoload zsh/terminfo

zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:max-errors:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric
#zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list '+' 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' menu select
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s

zstyle ':completion:*:named-directories' group-name 'named-directories'
zstyle ':completion:*:-tilde-:*' group-order 'named-directories' 'path-directories' 'users' 'expand'
zstyle ':completion:*:-tilde-:*' ignored-patterns '_*'

zstyle ':completion:*' special-dirs '..'
#zstyle :compinstall filename "${HOME}/.zshrc"

autoload -Uz compinit; compinit

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' max-exports 3
zstyle ':vcs_info:*' unstagedstr 'U'
zstyle ':vcs_info:*' stagedstr 'S'
zstyle ':vcs_info:*' actionformats " [%s:%b:%a]" '%R' '%S'
if [[ "4.3.9" == "${ZSH_VERSION}" ]]; then
	zstyle ':vcs_info:*' formats "%b" '%R'
else
	zstyle ':vcs_info:*' formats "%b%c%u" '%R' '%S'
fi

setopt COMPLETE_IN_WORD
setopt INTERACTIVE_COMMENTS
setopt LIST_PACKED
setopt EXTENDED_GLOB
setopt NO_HUP
#setopt MULTIBYTE
setopt PROMPT_SUBST

setopt SHARE_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS

HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=5000
bindkey -e

# Git-prompt
#__git_prompt_info() {
#	ref=$(git-symbolic-ref HEAD 2> /dev/null) || return
#	echo "[${ref#refs/heads/}]"
#}

function safe-source () {
	test -f "${1}" && source "${1}"
}
function virtualenv_info () {
	if [ ${VIRTUAL_ENV} ]; then
		venv=$(basename "${VIRTUAL_ENV}")
		echo "${venv}"
	fi
}

#bindkey -M menuselect '^o' accept-and-infer-next-history

#source "${HOME}/.zsh/fish-path/fish-path.zsh"

# Determine gnu-ls
ls --version >/dev/null 2>&1 && alias ls='ls --color=auto -F' || alias ls='ls -G -F'

export EDITOR="vim"

precmd () {
	print -Pn "\e]0;%~ %n@%m\a"

	if [ $timer ]; then
		timer_show=$(($SECONDS - $timer))
		if [ $timer_show -gt 10 ]; then
			print "\e[1;30mTook ${timer_show} seconds\e[0m"
		fi
		unset timer
	fi

	print "\e[1;37m________________________________________________________________________________\e[0m"
	prompt-info
}

# Screen name
preexec () {
	if [[ "$TERM" == "screen" ]]; then
		local CMD=${1[(wr)^(*=*|sudo|-*)]}
		echo -ne "\ek$CMD\e\\"
	fi
	timer=${timer:-$SECONDS}
}

set -o vi
bindkey -M vicmd '?' history-incremental-search-backward
bindkey -M vicmd '/' history-incremental-search-forward
bindkey -a u undo
bindkey -a '^R' redo
bindkey '^?' backward-delete-char
bindkey '^H' backward-delete-char

PROMPT=""

# Indication for insert mode
select_prompt() {
	if [[ ${KEYMAP} = vicmd ]] ; then
		PROMPT="${CMDPROMPT}"
	else
		PROMPT="${INSPROMPT}"
	fi
}
zle-keymap-select() {
	() { return $__prompt_status }
	# select_prompt
	zle reset-prompt
}
zle-line-init() {
	typeset -g __prompt_status="$?"
}
zle -N zle-keymap-select
zle -N zle-line-init

autoload edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line


safe-source "${HOME}/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh"

safe-source "${HOME}/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=64

safe-source "${HOME}/.zsh/django-plugin/django.plugin.zsh"
#safe-source "${HOME}/.zsh/make-dir-complete/make-dir-complete.plugin.zsh"

cdpath=(~ ~/Documents/Codemill ~/Documents/Projects)

safe-source "${HOME}/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
#ZSH_HIGHLIGHT_STYLES[globbing]='fg=yellow'
#ZSH_HIGHLIGHT_STYLES[path]='fg=cyan'
